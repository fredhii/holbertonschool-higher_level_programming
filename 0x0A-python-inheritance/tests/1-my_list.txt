# ===============================================
# Unit test 1-my_list
# ===============================================


import module:
       >>> MyList = __import__('1-my_list').MyList

Sorted list:
       >>> l = MyList([1, 2, 3])
       >>> print(l)
       [1, 2, 3]
       >>> l.print_sorted()
       [1, 2, 3]

Random list:
       >>> l = MyList()
       >>> l.append(10)
       >>> l.append(6)
       >>> l.append(7)
       >>> l.append(9)
       >>> l.append(8)
       >>> l.append(5)
       >>> print(l)
       [10, 6, 7, 9, 8, 5]
       >>> l.print_sorted()
       [5, 6, 7, 8, 9, 10]

Negative list:
	 >>> l = MyList()
	 >>> l.append(-5)
	 >>> l.append(-7)
	 >>> l.append(-23)
	 >>> l.append(-2)
	 >>> l.append(-1)
	 >>> print(l)
	 [-5, -7, -23, -2, -1]
	 >>> l.print_sorted()
	 [-23, -7, -5, -2, -1]

Empty list:
       >>> l = MyList(None)
       Traceback (most recent call last):
       TypeError: 'NoneType' object is not iterable

Two arguments:
       >>> l = MyList([1, 2], [3, 4])
       Traceback (most recent call last):
       TypeError: list() takes at most 1 argument (2 given)

Standard example:
       >>> l = MyList()
       >>> l.append(1)
       >>> l.append(2)
       >>> l.append(3)
       >>> print(l)
       [1, 2, 3]

Replace value:
       >>> l[0] = 5
       >>> print(l)
       [5, 2, 3]

Delete position:
       >>> l.remove(5)
       >>> print(l)
       [2, 3]

Print inheritance:
       >>> l = MyList()
       >>> print(l.print_sorted)
       <bound method MyList.print_sorted of []>

       >>> l.append(1)
       >>> l.append(4)
       >>> l.append(2)
       >>> l.append(3)
       >>> l.append(5)
       >>> print(l)
       [1, 4, 2, 3, 5]
       >>> l.print_sorted()
       [1, 2, 3, 4, 5]

Print names:
       >>> l = MyList()
       >>> l.append("Brand")
       >>> l.append("Poppy")
       >>> l.append("School")
       >>> l.append("Holberton")
       >>> l.append("Betty")
       >>> print(l)
       ['Brand', 'Poppy', 'School', 'Holberton', 'Betty']
       >>> l.print_sorted()
       ['Betty', 'Brand', 'Holberton', 'Poppy', 'School']

Sort empty list:
       >>> l = MyList()
       >>> l.print_sorted()
       []

Mixed list:
       >>> l = MyList([7, "Betty", "Holberton", 4])
       >>> l.print_sorted()
       Traceback (most recent call last):
       TypeError: '<' not supported between instances of 'str' and 'int'

>>> my_list = MyList()
>>> my_list.print_sorted()
[]


>>> my_list = MyList()
>>> my_list
[]

>>> my_list = MyList(5)
Traceback (most recent call last):
TypeError: 'int' object is not iterable


>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(4)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.append(5)
>>> print(my_list)
[1, 4, 2, 3, 5]

>>> my_list.print_sorted()
[1, 2, 3, 4, 5]

>>> print(my_list)
[1, 4, 2, 3, 5]

>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(2)
>>> my_list.append(3)
>>> print(my_list)
[1, 2, 3]

>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.append(2)
>>> my_list.append(3)
>>> my_list.print_sorted()
[1, 2, 3]

>>> my_list = MyList()
>>> my_list.append(-1)
>>> my_list.append(-4)
>>> my_list.append(-2)
>>> my_list.append(-3)
>>> my_list.append(-5)
>>> print(my_list)
[-1, -4, -2, -3, -5]

>>> my_list.print_sorted()
[-5, -4, -3, -2, -1]

>>> my_list = MyList()
>>> print(my_list)
[]

>>> my_list.print_sorted(1)
Traceback (most recent call last):
TypeError: print_sorted() takes 1 positional argument but 2 were given

>>> my_list.append()
Traceback (most recent call last):
TypeError: append() takes exactly one argument (0 given)

>>> my_list = MyList(None)
Traceback (most recent call last):
TypeError: 'NoneType' object is not iterable

>>> my_list = MyList([1, 2], [3, 4])
Traceback (most recent call last):
TypeError: list() takes at most 1 argument (2 given)

>>> my_list = MyList()
>>> type(my_list)
<class '1-my_list.MyList'>

>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list[0] = (2)
>>> print(my_list)
[2]

>>> my_list = MyList()
>>> my_list.append(1)
>>> my_list.remove(1)
>>> print(my_list)
[]

>>> my_list = MyList()
>>> my_list.append("hello")
>>> print(my_list)
['hello']

>>> my_list = MyList()
>>> my_list.append("hello")
>>> my_list.append(7)
>>> print(my_list)
['hello', 7]

>>> my_list = MyList()
>>> my_list.append("hello")
>>> my_list.append(7)
>>> my_list.print_sorted()
Traceback (most recent call last):
TypeError: unorderable types: int() < str()
